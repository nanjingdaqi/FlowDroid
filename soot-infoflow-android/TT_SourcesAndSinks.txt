<android.telephony.TelephonyManager: java.lang.String getImei()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getMeid()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> android.permission.READ_PHONE_STATE -> _SOURCE_

<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getIpAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_

<android.telephony.CellIdentityLte: int getTac()> -> _SOURCE_

<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastLocation()> -> _SOURCE_

<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> -> _SOURCE_

<android.os.UserManager: java.lang.String getUserName()> -> _SOURCE_

<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType()> -> _SOURCE_

<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_

<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> -> _SOURCE_

<android.media.AudioRecord: int read(short[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(byte[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> -> _SOURCE_

<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getCid()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_

<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_

<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllBookmarks()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls()> -> _SOURCE_

<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %

<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_

<java.io.OutputStream: void write(byte[])> -> _SINK_
<java.io.OutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.OutputStream: void write(int)> -> _SINK_

<java.io.FileOutputStream: void write(byte[])> -> _SINK_
<java.io.FileOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.FileOutputStream: void write(int)> -> _SINK_

<java.io.RandomAccessFile: void write(byte[])> -> _SINK_
<java.io.RandomAccessFile: void write(byte[],int,int)> -> _SINK_
<java.io.RandomAccessFile: void writeBoolean(boolean)> -> _SINK_
<java.io.RandomAccessFile: void writeByte(int)> -> _SINK_
<java.io.RandomAccessFile: void writeBytes(byte[],int,int)> -> _SINK_
<java.io.RandomAccessFile: void writeBytes(java.lang.String)> -> _SINK_
<java.io.RandomAccessFile: void writeChar(int)> -> _SINK_
<java.io.RandomAccessFile: void writeChars(java.lang.String)> -> _SINK_
<java.io.RandomAccessFile: void writeDouble(double)> -> _SINK_
<java.io.RandomAccessFile: void writeFloat(float)> -> _SINK_
<java.io.RandomAccessFile: void writeInt(int)> -> _SINK_
<java.io.RandomAccessFile: void writeLong(long)> -> _SINK_
<java.io.RandomAccessFile: void writeShort(int)> -> _SINK_
<java.io.RandomAccessFile: void writeUTF(java.lang.String)> -> _SINK_

<java.io.Writer: void write(char[])> -> _SINK_
<java.io.Writer: void write(char[],int,int)> -> _SINK_
<java.io.Writer: void write(int)> -> _SINK_
<java.io.Writer: void write(java.lang.String)> -> _SINK_
<java.io.Writer: void write(java.lang.String,int,int)> -> _SINK_
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)> -> _SINK_

<java.io.OutputStreamWriter: java.io.Writer append(java.lang.CharSequence)> -> _SINK_

<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS -> _SINK_
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS -> _SINK_
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> android.permission.SEND_SMS -> _SINK_

<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> _SINK_

<java.net.URL: <init>(java.lang.String)> -> _SINK_
<java.net.URL: <init>(java.net.URL,java.lang.String)> -> _SINK_
<java.net.URL: <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)> -> _SINK_
<java.net.URL: <init>(java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<java.net.URL: <init>(java.lang.String,java.lang.String,int,java.lang.String)> -> _SINK_
<java.net.URL: <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)> -> _SINK_

<java.net.URLConnection: setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_

<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)> -> _SINK_
<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String)> -> _SINK_
<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(int,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)> -> _SINK_
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)> -> _SINK_
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])> -> _SINK_
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)> -> _SINK_
